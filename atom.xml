<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Johnny Happy&#39;s Blog</title>
  
  <subtitle>programer / freelancer / geek</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2020-03-14T13:50:48.572Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Johnny Happy</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>一步一步用 D3js 写一个 Line Chart</title>
    <link href="http://yoursite.com/2020/03/14/write-a-line-chart-using-d3/"/>
    <id>http://yoursite.com/2020/03/14/write-a-line-chart-using-d3/</id>
    <published>2020-03-14T11:25:15.000Z</published>
    <updated>2020-03-14T13:50:48.572Z</updated>
    
    <content type="html"><![CDATA[<p><a href="write-a-bar-chart-using-d3js.md">上文</a>介绍了如何用 D3js 写一个 bar chart。本文继承上文的知识点，并加以补充描述如何画一个基于时间序列为 Line Chart。</p><video src="/videos/linechart_demo.mov" autoplay loop="loop"></video><p>时间序列通常有几个常见的特点:</p><ol><li>x 轴为时间，可能是不同的时间粒度。</li><li>x 轴要注意格式的显示，由于时间字符串长度较大，可能要考虑巧妙的设计 ticks 和 tickFormat。</li><li>有时会用到动态实时刷新的处理</li><li>通过范围选定一个时间范围，然后进行钻取(drill down)</li><li>金融领域也使用时间序列，但在此基础上加了很多技术分析相关的显示组件。</li></ol><p>以下介绍一个所有领域通用的 Line Chart.</p><h2 id="step-by-step"><a href="#step-by-step" class="headerlink" title="step by step"></a>step by step</h2><h4 id="Axis"><a href="#Axis" class="headerlink" title="Axis"></a>Axis</h4><p> 首先先画轴。Y 轴使用的是<code>sacleLinear</code>。X 轴这里是时间序列所以要使用<code>scaleTime</code>。<code>scaleTime</code> 在缩放的时候是使用 Date 对象绽放成数值，这点需要注意。</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">this</span>.x = d3</span><br><span class="line">  .scaleTime()</span><br><span class="line">  .domain([data[<span class="number">0</span>].x <span class="keyword">as</span> <span class="built_in">Date</span>, data[data.length - <span class="number">1</span>].x <span class="keyword">as</span> <span class="built_in">Date</span>])</span><br><span class="line">  .range([margin.left, width - margin.right])</span><br></pre></td></tr></table></figure><p>轴的 tick 间隔也可以基于时间进行设置</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">this</span>.xAxis = d3</span><br><span class="line">  .axisBottom(<span class="keyword">this</span>.x)</span><br><span class="line">  <span class="comment">// @ts-ignore</span></span><br><span class="line">  .tickFormat(<span class="function">(<span class="params">d: DataItem</span>) =&gt;</span> moment(d).format(<span class="string">'M-D'</span>))</span><br><span class="line">  .ticks(d3.timeDay.every(<span class="number">2</span>))</span><br></pre></td></tr></table></figure><p>下面是显示效果：<br><img src="/images/linechart__axis.png" alt="d3 line chart axis"></p><h4 id="Series-amp-Tooltip"><a href="#Series-amp-Tooltip" class="headerlink" title="Series &amp; Tooltip"></a>Series &amp; Tooltip</h4><p>画 series 时要注意，拆线图是在 svg 上是一个 line，这样就不能直接响应某个数据点的 hover 事件。所以需要在线上再加一组点，然后将 hover 的处理作用在点上。当然这个点可以设置成可见与不可见的。对于不可见的情况感觉是 hover 上线上了，实际是透明的点响应了这个事件。</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line">initSeries() &#123;</span><br><span class="line">   <span class="keyword">const</span> &#123; data &#125; = <span class="keyword">this</span>.config</span><br><span class="line">   <span class="keyword">const</span> that = <span class="keyword">this</span></span><br><span class="line"></span><br><span class="line">   <span class="keyword">const</span> line = d3</span><br><span class="line">     .line()</span><br><span class="line">     .x(<span class="function">(<span class="params">d: <span class="built_in">any</span>, i: <span class="built_in">number</span></span>) =&gt;</span> that.x(d.x))</span><br><span class="line">     .y(<span class="function">(<span class="params">d: <span class="built_in">any</span>, i: <span class="built_in">number</span></span>) =&gt;</span> that.y(d.y))</span><br><span class="line">     .curve(d3.curveMonotoneX)</span><br><span class="line"></span><br><span class="line">   <span class="keyword">this</span>.series = <span class="keyword">this</span>.svg</span><br><span class="line">     .append(<span class="string">'path'</span>)</span><br><span class="line">     .datum(data) <span class="comment">// 10. Binds data to the line</span></span><br><span class="line">     .attr(<span class="string">'class'</span>, <span class="string">'line'</span>) <span class="comment">// Assign a class for styling</span></span><br><span class="line">     .attr(<span class="string">'d'</span>, line)</span><br><span class="line">     .attr(<span class="string">'fill'</span>, <span class="string">'none'</span>)</span><br><span class="line">     .attr(<span class="string">'stroke'</span>, Colors.primary)</span><br><span class="line">     .attr(<span class="string">'stroke-width'</span>, <span class="number">3</span>)</span><br><span class="line"></span><br><span class="line">   <span class="keyword">const</span> dot = <span class="keyword">this</span>.svg</span><br><span class="line">     .selectAll(<span class="string">'.dot'</span>)</span><br><span class="line">     .data(data)</span><br><span class="line">     .enter()</span><br><span class="line">     .append(<span class="string">'circle'</span>) <span class="comment">// Uses the enter().append() method</span></span><br><span class="line">     .attr(<span class="string">'class'</span>, <span class="string">'dot'</span>) <span class="comment">// Assign a class for styling</span></span><br><span class="line">     .attr(<span class="string">'cx'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">d: <span class="built_in">any</span></span>) </span>&#123;</span><br><span class="line">       <span class="keyword">return</span> that.x(moment(d.x).toDate())</span><br><span class="line">     &#125;)</span><br><span class="line">     .attr(<span class="string">'cy'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">d: <span class="built_in">any</span></span>) </span>&#123;</span><br><span class="line">       <span class="keyword">return</span> that.y(d.y)</span><br><span class="line">     &#125;)</span><br><span class="line">     .attr(<span class="string">'r'</span>, <span class="number">5</span>)</span><br><span class="line">     .attr(<span class="string">'fill'</span>, Colors.primary)</span><br><span class="line">     .attr(<span class="string">'stroke'</span>, <span class="string">'#fff'</span>)</span><br><span class="line">     .style(<span class="string">'cursor'</span>, <span class="string">'pointer'</span>)</span><br><span class="line">     .attr(<span class="string">'stroke-width'</span>, <span class="number">2</span>)</span><br><span class="line">     .on(<span class="string">'mouseover'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">d: DataItem, i: <span class="built_in">number</span></span>) </span>&#123;</span><br><span class="line">       <span class="built_in">console</span>.log(<span class="string">'y'</span>, that.y(d.y))</span><br><span class="line">       that.tooltip</span><br><span class="line">         .transition()</span><br><span class="line">         .duration(<span class="number">20</span>)</span><br><span class="line">         .style(<span class="string">'opacity'</span>, <span class="number">0.9</span>)</span><br><span class="line"></span><br><span class="line">       <span class="keyword">let</span> left = d3.event.pageX + <span class="number">20</span></span><br><span class="line">       <span class="keyword">if</span> (i &gt; data.length / <span class="number">2</span>) &#123;</span><br><span class="line">         left = d3.event.pageX - <span class="number">120</span></span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">       <span class="keyword">const</span> maxDomainValue = d3.max(data, <span class="function">(<span class="params">d: DataItem</span>) =&gt;</span> d.y <span class="keyword">as</span> <span class="built_in">number</span>)</span><br><span class="line">       <span class="keyword">let</span> top = d3.event.pageY - <span class="number">60</span></span><br><span class="line">       <span class="keyword">if</span> (d.y &gt; maxDomainValue * <span class="number">0.66</span>) &#123;</span><br><span class="line">         top = d3.event.pageY + <span class="number">20</span></span><br><span class="line">       &#125;</span><br><span class="line">       that.tooltip</span><br><span class="line">         .html(moment(d.x).format(<span class="string">'YYYY-MM-DD'</span>) + <span class="string">'&lt;br /&gt;'</span> + d.y)</span><br><span class="line">         .style(<span class="string">'left'</span>, left + <span class="string">'px'</span>)</span><br><span class="line">         .style(<span class="string">'top'</span>, top + <span class="string">'px'</span>)</span><br><span class="line">         .style(<span class="string">'z-index'</span>, <span class="number">1</span>)</span><br><span class="line">     &#125;)</span><br><span class="line">     .on(<span class="string">'mouseout'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">d: DataItem, i: <span class="built_in">number</span></span>) </span>&#123;</span><br><span class="line">       that.tooltip.style(<span class="string">'opacity'</span>, <span class="number">0</span>).style(<span class="string">'z-index'</span>, <span class="number">-1</span>)</span><br><span class="line">     &#125;)</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><p>下面是显示效果：<br><img src="/images/linechart__series.png" alt="d3 line chart series"></p><h4 id="gridline"><a href="#gridline" class="headerlink" title="gridline"></a>gridline</h4><p>实现网格线的方式与<a href="write-a-bar-chart-using-d3js.md">上文</a>一致，不再赘述。</p><h2 id="交互"><a href="#交互" class="headerlink" title="交互"></a>交互</h2><h4 id="实现范围选取"><a href="#实现范围选取" class="headerlink" title="实现范围选取"></a>实现范围选取</h4><p>d3js 可以实现一个方向或两个方向的 brush 来进行范围选取。在范围选取后可以通过<code>d3.brushSelection(this)</code>来获得选区.</p><p>有几点要注意：</p><ol><li>brush 层要放在 series 下，否则会出现 tooltip 不生效的现象。原来是 brush 占用了一个图层来实现 draging 的处理。有点像手机屏幕的原理，有显示层，有触摸层，有防护层。</li><li>通过<code>brush.extent()</code>限制选区的范围，这里需要把 margin 去掉</li></ol><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">protected</span> initBrush() &#123;</span><br><span class="line">    <span class="keyword">const</span> that = <span class="keyword">this</span></span><br><span class="line">    <span class="keyword">const</span> &#123; margin, width, height &#125; = <span class="keyword">this</span>.config</span><br><span class="line">    <span class="keyword">const</span> brushX = d3.brushX().extent([</span><br><span class="line">      [margin.left, margin.top],</span><br><span class="line">      [width - margin.right, height - margin.bottom]</span><br><span class="line">    ])</span><br><span class="line">    brushX</span><br><span class="line">      <span class="comment">// .on('start') // brush start event</span></span><br><span class="line">      .on(<span class="string">'brush'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">const</span> ext: <span class="built_in">any</span>[] = d3.brushSelection(<span class="keyword">this</span>)</span><br><span class="line">        <span class="built_in">console</span>.log(</span><br><span class="line">          <span class="string">'brushing'</span>,</span><br><span class="line">          ext.map(<span class="function">(<span class="params">e: <span class="built_in">any</span></span>) =&gt;</span> that.x.invert(e))</span><br><span class="line">        )</span><br><span class="line">      &#125;)</span><br><span class="line">      .on(<span class="string">'end'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">const</span> ext: <span class="built_in">any</span>[] = d3.brushSelection(<span class="keyword">this</span>)</span><br><span class="line">        <span class="built_in">console</span>.log(</span><br><span class="line">          <span class="string">'brush end'</span>,</span><br><span class="line">          ext.map(<span class="function">(<span class="params">e: <span class="built_in">any</span></span>) =&gt;</span> that.x.invert(e))</span><br><span class="line">        )</span><br><span class="line">      &#125;)</span><br><span class="line">    <span class="keyword">this</span>.svg</span><br><span class="line">      .append(<span class="string">'g'</span>)</span><br><span class="line">      .attr(<span class="string">'class'</span>, <span class="string">'brush'</span>)</span><br><span class="line">      .call(brushX)</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p>效果如下<br><img src="/images/linechart__brush.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;write-a-bar-chart-using-d3js.md&quot;&gt;上文&lt;/a&gt;介绍了如何用 D3js 写一个 bar chart。本文继承上文的知识点，并加以补充描述如何画一个基于时间序列为 Line Chart。&lt;/p&gt;

&lt;video src=&quot;/vi
      
    
    </summary>
    
    
    
      <category term="d3js" scheme="http://yoursite.com/tags/d3js/"/>
    
      <category term="数据可视化" scheme="http://yoursite.com/tags/%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>一步一步用 D3js 写一个Bar Chart</title>
    <link href="http://yoursite.com/2020/03/13/write-a-bar-chart-using-d3js/"/>
    <id>http://yoursite.com/2020/03/13/write-a-bar-chart-using-d3js/</id>
    <published>2020-03-13T14:53:33.000Z</published>
    <updated>2020-03-14T13:50:57.200Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>本文介绍如何使用 d3js 创建一个 bar chart 组件（参考下视频）, 下面操起来！</p><video src="/videos/barchart_demo.mov" autoplay loop="loop"></video><h2 id="but-why"><a href="#but-why" class="headerlink" title="but why?"></a>but why?</h2><p>为什么要使用 d3 自己做图表组件呢？现在不是有很多 JS 组件库了吗？</p><p>我试着从以下几个原因来说明这个问题：</p><ol><li>图表库太多不知道选用哪个</li><li>有的图表好看，但只支持基本功能，定制能力很差</li><li>有的图表要求收费，否则显示图表 logo</li><li>费了好多时间找的一个图表库，可是有几个小的交互功能不支持，比如图例不能自定义或不能支持范围选取</li></ol><h4 id="图表没有“银弹”"><a href="#图表没有“银弹”" class="headerlink" title="图表没有“银弹”"></a>图表没有“银弹”</h4><p>越来越发现“没有银弹”是具有普适性的。<br>包含可视化的项目中，对图表的使用和依赖程度是不一样的。如果一个数据可视化项目要求比较简单，如：只使用了柱图，饼图，拆线图，且只需要图表的展示并不需要图表交互的话。可能世面上的大多数图表都是适用的。但我认为，这类项目不应该算叫数据可视化项目，就是在一个系统中集成了一些简单数据分析的功能。</p><p>如果是向天平的另一端看的话，想找到一个能够范围所有项目在数据分析领域的图表库的话，是很难的。一个原因大于这些图表库通过封装而提高了使用的便利性的同时，也损失掉了灵活性。虽然没个图表库都试图开发更多的配置接口，但有时也不如人意。</p><h4 id="找一个能够完全满足项目需求的图表库太难"><a href="#找一个能够完全满足项目需求的图表库太难" class="headerlink" title="找一个能够完全满足项目需求的图表库太难"></a>找一个能够完全满足项目需求的图表库太难</h4><p>图表开发的时候会有几个问题经常遇到：</p><ol><li>可以支持多数据系列</li><li>支持时间序列</li><li>可以切换数据的可见性，通过图表或图表中的 series</li><li>调整图表样式，如设置图表调色板，线条粗细等等</li><li>事件的处理，如点击图例，点击数据，范围选取数据</li><li>自定义 hover 文本</li><li>动画</li><li>多 y 轴</li><li>数据加载性能</li><li>自定义图表</li><li>…</li></ol><p>笔者不定周期的会审查一下市面上的图表库，目前没有得到一个使自己完全满意的。</p><h4 id="d3js-定制能力非常强大"><a href="#d3js-定制能力非常强大" class="headerlink" title="d3js 定制能力非常强大"></a>d3js 定制能力非常强大</h4><p>d3js 与其它图表的不同在于它开放给用户的是显示组件，而不是一个个已经封装好的图表。并且每个抽象的显示组件都可以进行编程式的定制。如：Axis, GridLine, Title, Series。从这一点上，d3js 所能做的可能会超越你的想象。我觉得也可以说 d3js 和其它的图表库不是一个使用级别上的东西。所以，也不太好与之相比较。</p><h4 id="所以"><a href="#所以" class="headerlink" title="所以"></a>所以</h4><p>我个人建议，如果是一个对数据可视化有一定要求的项目，就直接用 d3js DIY 组件好了，可能提供给你充足的灵活性和想象力。这样不会因为三方库不得不进行功能上的妥协。</p><h2 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h2><h4 id="工程搭建"><a href="#工程搭建" class="headerlink" title="工程搭建"></a>工程搭建</h4><p>首先，需要搭建最小项目框架，包括：</p><ol><li><a href="https://webpack.js.org/guides/getting-started/" target="_blank" rel="noopener">配置基础</a></li><li><a href="https://webpack.js.org/guides/development/" target="_blank" rel="noopener">配置 webpack-dev-server 和 sourcemap</a></li><li><a href="https://webpack.js.org/guides/typescript/" target="_blank" rel="noopener">配置 typescript</a></li></ol><p>过程参考 webpack 教程就好。</p><h4 id="测试数据"><a href="#测试数据" class="headerlink" title="测试数据"></a>测试数据</h4><p>测试数据使用 faker 进行生成</p><p>!!!!<strong>这个地址一会要换成 tag testdata</strong><br><a href="https://github.com/johnnyhappy365/create-chart-using-d3/releases/tag/webpack%2Btypescript" target="_blank" rel="noopener">完整代码</a></p><h2 id="显示"><a href="#显示" class="headerlink" title="显示"></a>显示</h2><p>接下来，开始画 Bar Chart 了。</p><h4 id="Axis"><a href="#Axis" class="headerlink" title="Axis"></a>Axis</h4><p>我们要画的是一个 horizontal bar chart。所以 Y 轴的对数是 categorial 的，而 X 轴的数据是 number。</p><p>X 轴要使用 scaleLinear, 而 Y 轴要使用 scaleBand。</p><p>主要代码</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">protected</span> initAxis() &#123;</span><br><span class="line">  <span class="keyword">const</span> &#123; data, width, height, margin &#125; = <span class="keyword">this</span>.config</span><br><span class="line">  <span class="keyword">const</span> maxDomainValue = d3.max(data, <span class="function">(<span class="params">d: DataItem</span>) =&gt;</span> d.x <span class="keyword">as</span> <span class="built_in">number</span>)</span><br><span class="line">  <span class="keyword">this</span>.x = d3</span><br><span class="line">    .scaleLinear()</span><br><span class="line">    .domain([<span class="number">0</span>, maxDomainValue])</span><br><span class="line">    .range([margin.left, width - margin.right])</span><br><span class="line"></span><br><span class="line">  <span class="keyword">this</span>.xAxis = d3.axisBottom(<span class="keyword">this</span>.x)</span><br><span class="line">  <span class="keyword">this</span>.svg</span><br><span class="line">    .append(<span class="string">'g'</span>)</span><br><span class="line">    .attr(<span class="string">'transform'</span>, <span class="string">`translate(0, <span class="subst">$&#123;height - margin.bottom&#125;</span>)`</span>)</span><br><span class="line">    .call(<span class="keyword">this</span>.xAxis)</span><br><span class="line"></span><br><span class="line">  <span class="keyword">this</span>.y = d3</span><br><span class="line">    .scaleBand()</span><br><span class="line">    .domain(data.map(<span class="function">(<span class="params">d: DataItem</span>) =&gt;</span> d.y) <span class="keyword">as</span> <span class="built_in">string</span>[])</span><br><span class="line">    .range([margin.top, height - margin.bottom])</span><br><span class="line">    .padding(<span class="number">0.3</span>)</span><br><span class="line"></span><br><span class="line">  <span class="keyword">this</span>.yAxis = d3.axisLeft(<span class="keyword">this</span>.y)</span><br><span class="line">  <span class="keyword">this</span>.svg</span><br><span class="line">    .append(<span class="string">'g'</span>)</span><br><span class="line">    .attr(<span class="string">'transform'</span>, <span class="string">`translate(<span class="subst">$&#123;margin.left&#125;</span>, 0)`</span>)</span><br><span class="line">    .call(<span class="keyword">this</span>.yAxis)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>显示效果如下</p><p><img src="/images/barchart__axis.png" alt="d3 barchat axis"></p><h4 id="Series"><a href="#Series" class="headerlink" title="Series"></a>Series</h4><p>然后是主角登录，画 Series，当前我们的用例中不包含多 Series 的情况，所以只需要画一个 bar 就行了。</p><p>在 SVG 中可以使用 rect 来实现。</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">protected</span> initSeries() &#123;</span><br><span class="line">  <span class="keyword">const</span> &#123; data, margin &#125; = <span class="keyword">this</span>.config</span><br><span class="line">  <span class="keyword">this</span>.svg</span><br><span class="line">    .selectAll(<span class="string">'.bar'</span>)</span><br><span class="line">    .data(data)</span><br><span class="line">    .enter()</span><br><span class="line">    .append(<span class="string">'rect'</span>)</span><br><span class="line">    .classed(<span class="string">'bar'</span>, <span class="literal">true</span>)</span><br><span class="line">    .attr(<span class="string">'fill'</span>, Colors.primary)</span><br><span class="line">    .attr(<span class="string">'x'</span>, margin.left)</span><br><span class="line">    .attr(<span class="string">'y'</span>, <span class="function">(<span class="params">d: DataItem</span>) =&gt;</span> <span class="keyword">this</span>.y(d.y))</span><br><span class="line">    .attr(<span class="string">'width'</span>, <span class="function">(<span class="params">d: DataItem</span>) =&gt;</span> <span class="keyword">this</span>.x(d.x) - margin.left)</span><br><span class="line">    .attr(<span class="string">'height'</span>, <span class="keyword">this</span>.y.bandwidth())</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>bandwidth()</code> 可以取得 scaleBand 中计算出来的 band 宽度。显示效果如下</p><p><img src="/images/barchart__series.png" alt="d3 barchat series"></p><h4 id="Grid-Line"><a href="#Grid-Line" class="headerlink" title="Grid Line"></a>Grid Line</h4><p>加网线的方法可以参考这个<a href="http://bl.ocks.org/35degrees/23873a64ceec2390c400694b6a8b57d9" target="_blank" rel="noopener">例子</a></p><p>grid line 实际上就是一个 axis。在些基础上需要注意几点：</p><ol><li>tickFormat 设置成’’</li><li>设置 ticks(interval)</li><li>设置下样式</li><li>在 series 和 axis 的图层下方进行绘制</li><li>x/y 轴是否都需要加 grid line 适具体情况而定</li></ol><p>主要代码参考如下</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">protected</span> initGridlines() &#123;</span><br><span class="line">  <span class="keyword">const</span> &#123; height, margin &#125; = <span class="keyword">this</span>.config</span><br><span class="line">  <span class="keyword">const</span> gridX = d3</span><br><span class="line">    .axisBottom(<span class="keyword">this</span>.x)</span><br><span class="line">    .ticks(<span class="number">5</span>)</span><br><span class="line">    .tickSize(-height + margin.top + margin.bottom)</span><br><span class="line">    .tickFormat(<span class="function"><span class="params">()</span> =&gt;</span> <span class="string">''</span>)</span><br><span class="line">  <span class="keyword">this</span>.svg</span><br><span class="line">    .append(<span class="string">'g'</span>)</span><br><span class="line">    .call(gridX)</span><br><span class="line">    .classed(<span class="string">'grid'</span>, <span class="literal">true</span>)</span><br><span class="line">    .attr(<span class="string">'color'</span>, Colors.grey)</span><br><span class="line">    .attr(<span class="string">'stroke-width'</span>, <span class="number">0.1</span>)</span><br><span class="line">    .attr(<span class="string">'stroke-dasharray'</span>, <span class="string">'3,3'</span>)</span><br><span class="line">    .attr(<span class="string">'transform'</span>, <span class="string">`translate(0, <span class="subst">$&#123;height - margin.bottom&#125;</span>)`</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/images/barchart__gridline.png" alt="d3 bar chart with gridline"></p><h4 id="Mid-Line"><a href="#Mid-Line" class="headerlink" title="Mid Line"></a>Mid Line</h4><p>通过上面的努力已经完成了一个静态 bar chart。如果不需要任何交互的话，这个图表已经是可以在项目中使用的了。</p><p>有时，为了提供数据分析的效率，会在些基础上绘制一些辅助线，比如：中位数线。</p><p>中线主要有几个点注意下就可以了:</p><ol><li>使用<code>d3.median()</code>计算中位数，d3 也提供了其它基础的统计方法，如四分位数和平均数等</li><li>在 svg 画一个 line, 显示中位数线</li><li>在 svg 画一个 text, 显示数值</li></ol><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">protected</span> initMidLine() &#123;</span><br><span class="line">  <span class="keyword">const</span> &#123; data, margin, height &#125; = <span class="keyword">this</span>.config</span><br><span class="line">  <span class="keyword">const</span> midValue = d3.median(data.map(<span class="function">(<span class="params">d: DataItem</span>) =&gt;</span> d.x <span class="keyword">as</span> <span class="built_in">number</span>))</span><br><span class="line"></span><br><span class="line">  <span class="keyword">this</span>.svg</span><br><span class="line">    .append(<span class="string">'line'</span>)</span><br><span class="line">    .classed(<span class="string">'mid'</span>, <span class="literal">true</span>)</span><br><span class="line">    .attr(<span class="string">'stroke'</span>, Colors.secondary)</span><br><span class="line">    .attr(<span class="string">'stroke-width'</span>, <span class="number">2</span>)</span><br><span class="line">    .attr(<span class="string">'x1'</span>, <span class="keyword">this</span>.x(midValue))</span><br><span class="line">    .attr(<span class="string">'x2'</span>, <span class="keyword">this</span>.x(midValue))</span><br><span class="line">    .attr(<span class="string">'y1'</span>, margin.top)</span><br><span class="line">    .attr(<span class="string">'y2'</span>, height - margin.bottom)</span><br><span class="line"></span><br><span class="line">  <span class="comment">// add text</span></span><br><span class="line">  <span class="keyword">this</span>.svg</span><br><span class="line">    .append(<span class="string">'text'</span>)</span><br><span class="line">    .classed(<span class="string">'mid-text'</span>, <span class="literal">true</span>)</span><br><span class="line">    .attr(<span class="string">'x'</span>, <span class="keyword">this</span>.x(midValue) + <span class="number">2</span>)</span><br><span class="line">    .attr(<span class="string">'y'</span>, margin.top)</span><br><span class="line">    .attr(<span class="string">'width'</span>, <span class="number">20</span>)</span><br><span class="line">    .attr(<span class="string">'height'</span>, <span class="number">10</span>)</span><br><span class="line">    .attr(<span class="string">'font-size'</span>, <span class="string">'10px'</span>)</span><br><span class="line">    .attr(<span class="string">'font-family'</span>, <span class="string">'sans-serif'</span>)</span><br><span class="line">    .style(<span class="string">'fill'</span>, Colors.secondary)</span><br><span class="line">    .text(<span class="string">`mid: <span class="subst">$&#123;midValue&#125;</span>`</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/images/barchart__mid.png" alt="d3 bar chart with mid value"></p><h4 id="Responsive"><a href="#Responsive" class="headerlink" title="Responsive"></a>Responsive</h4><p>有一个隐性需求是图表经常要自适应屏幕的大小。svg 可能通过以下代码实现在 block 容器中自适应大小，并且可以根据屏幕尺寸的改变而自动按比例进行缩放。</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">protected</span> initSvg() &#123;</span><br><span class="line">  <span class="keyword">const</span> &#123; selector, width, height &#125; = <span class="keyword">this</span>.config</span><br><span class="line"></span><br><span class="line">  <span class="keyword">this</span>.svg = d3</span><br><span class="line">    .select(selector)</span><br><span class="line">    .append(<span class="string">'div'</span>)</span><br><span class="line">    .classed(<span class="string">'chart-wrapper'</span>, <span class="literal">true</span>)</span><br><span class="line">    .style(<span class="string">'display'</span>, <span class="string">'inline-block'</span>)</span><br><span class="line">    .style(<span class="string">'position'</span>, <span class="string">'relative'</span>)</span><br><span class="line">    .style(<span class="string">'width'</span>, <span class="string">'100%'</span>)</span><br><span class="line">    .style(<span class="string">'padding-bottom'</span>, <span class="string">'100%'</span>)</span><br><span class="line">    .style(<span class="string">'vertical-align'</span>, <span class="string">'top'</span>)</span><br><span class="line">    .style(<span class="string">'overflow'</span>, <span class="string">'hidden'</span>)</span><br><span class="line">    <span class="comment">// Container class to make it responsive.</span></span><br><span class="line">    .append(<span class="string">'svg'</span>)</span><br><span class="line">    .attr(<span class="string">'preserveAspectRatio'</span>, <span class="string">'xMinYMin meet'</span>)</span><br><span class="line">    .attr(<span class="string">'viewBox'</span>, <span class="string">`0 0 <span class="subst">$&#123;width&#125;</span> <span class="subst">$&#123;height&#125;</span>`</span>)</span><br><span class="line">    .style(<span class="string">'display'</span>, <span class="string">'inline-block'</span>)</span><br><span class="line">    .style(<span class="string">'position'</span>, <span class="string">'absolute'</span>)</span><br><span class="line">    .style(<span class="string">'top'</span>, <span class="string">'0'</span>)</span><br><span class="line">    .style(<span class="string">'left'</span>, <span class="string">'0'</span>)</span><br><span class="line">  <span class="comment">// .style('background-color', Colors.grey)</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="交互"><a href="#交互" class="headerlink" title="交互"></a>交互</h2><p>通过 d3js 可以很方便的实现想要的交互功能。在这里我们实现最常用的几个 bar chart 的交互：</p><ol><li>鼠标悬停在数据上进行高亮，并显示 tooltip 数值</li><li>点击事件</li></ol><p>使用<code>on</code>进行事件监听，<code>click</code> 事件用来响应点击。hover 的处理包含进入和退出需要监听 <code>mouseover</code> 和 <code>mouseout</code>。另外，hover 的处理要加上 animation，不然的话状态切换会有些生硬。修改后的<code>initSeries</code>如下</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">protected</span> initSeries() &#123;</span><br><span class="line">  <span class="keyword">const</span> &#123; data, margin &#125; = <span class="keyword">this</span>.config</span><br><span class="line">  <span class="keyword">const</span> that = <span class="keyword">this</span></span><br><span class="line">  <span class="keyword">this</span>.series = <span class="keyword">this</span>.svg</span><br><span class="line">    .selectAll(<span class="string">'.bar'</span>)</span><br><span class="line">    .data(data)</span><br><span class="line">    .enter()</span><br><span class="line">    .append(<span class="string">'rect'</span>)</span><br><span class="line">    .classed(<span class="string">'bar'</span>, <span class="literal">true</span>)</span><br><span class="line">    .attr(<span class="string">'fill'</span>, Colors.primary)</span><br><span class="line">    .attr(<span class="string">'x'</span>, margin.left + <span class="number">1</span>) <span class="comment">// forbiden overlay by series</span></span><br><span class="line">    .attr(<span class="string">'y'</span>, <span class="function">(<span class="params">d: DataItem</span>) =&gt;</span> <span class="keyword">this</span>.y(d.y))</span><br><span class="line">    .attr(<span class="string">'width'</span>, <span class="function">(<span class="params">d: DataItem</span>) =&gt;</span> <span class="keyword">this</span>.x(d.x) - margin.left)</span><br><span class="line">    .attr(<span class="string">'height'</span>, <span class="keyword">this</span>.y.bandwidth())</span><br><span class="line">    .on(<span class="string">'click'</span>, <span class="function">(<span class="params">d: DataItem</span>) =&gt;</span> alert(<span class="string">`click <span class="subst">$&#123;d.y&#125;</span>`</span>))</span><br><span class="line">    .on(<span class="string">'mouseover.bar'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">d: DataItem, i: <span class="built_in">number</span></span>) </span>&#123;</span><br><span class="line">      that.setSeriesColor(Colors.grey)</span><br><span class="line">      d3.select(<span class="keyword">this</span>)</span><br><span class="line">        .transition()</span><br><span class="line">        .duration(<span class="number">200</span>)</span><br><span class="line">        .attr(<span class="string">'fill'</span>, Colors.primary)</span><br><span class="line"></span><br><span class="line">      that.seriesLabel</span><br><span class="line">        .filter(<span class="function">(<span class="params">d: DataItem, index: <span class="built_in">number</span></span>) =&gt;</span> index === i)</span><br><span class="line">        .transition()</span><br><span class="line">        .duration(<span class="number">200</span>)</span><br><span class="line">        .attr(<span class="string">'opacity'</span>, <span class="number">0.9</span>)</span><br><span class="line">    &#125;)</span><br><span class="line">    .on(<span class="string">'mouseout.bar'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">d: DataItem, i: <span class="built_in">number</span></span>) </span>&#123;</span><br><span class="line">      that.setSeriesColor(Colors.primary)</span><br><span class="line">      that.seriesLabel</span><br><span class="line">        .transition()</span><br><span class="line">        .duration(<span class="number">200</span>)</span><br><span class="line">        .attr(<span class="string">'opacity'</span>, <span class="number">0</span>)</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">  <span class="keyword">this</span>.seriesLabel = <span class="keyword">this</span>.svg</span><br><span class="line">    .selectAll(<span class="string">'.series-label'</span>)</span><br><span class="line">    .data(data)</span><br><span class="line">    .enter()</span><br><span class="line">    .append(<span class="string">'text'</span>)</span><br><span class="line">    .classed(<span class="string">'series-label'</span>, <span class="literal">true</span>)</span><br><span class="line">    .text(<span class="function">(<span class="params">d: DataItem</span>) =&gt;</span> d.x)</span><br><span class="line">    .attr(<span class="string">'fill'</span>, Colors.text)</span><br><span class="line">    .attr(<span class="string">'x'</span>, <span class="function">(<span class="params">d: DataItem</span>) =&gt;</span> <span class="keyword">this</span>.x(d.x) + <span class="number">4</span>) <span class="comment">// forbiden overlay by series</span></span><br><span class="line">    .attr(<span class="string">'y'</span>, <span class="function">(<span class="params">d: DataItem</span>) =&gt;</span> <span class="keyword">this</span>.y(d.y) + <span class="keyword">this</span>.y.bandwidth() / <span class="number">2</span>)</span><br><span class="line">    .attr(<span class="string">'width'</span>, <span class="function">(<span class="params">d: DataItem</span>) =&gt;</span> <span class="keyword">this</span>.x(d.x) - margin.left)</span><br><span class="line">    .attr(<span class="string">'dominant-baseline'</span>, <span class="string">'central'</span>)</span><br><span class="line">    .attr(<span class="string">'height'</span>, <span class="keyword">this</span>.y.bandwidth())</span><br><span class="line">    .attr(<span class="string">'font-size'</span>, <span class="string">'8px'</span>)</span><br><span class="line">    .attr(<span class="string">'font-family'</span>, <span class="string">'sans-serif'</span>)</span><br><span class="line">    .attr(<span class="string">'opacity'</span>, <span class="number">0</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/images/barchart__hover.png" alt="d3 bar chart with highlight"></p><h2 id="组件化"><a href="#组件化" class="headerlink" title="组件化"></a>组件化</h2><p>最好一步，把一些可重用的配置抽取出来，一个图表组件就可能在项目中使用了。</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">new</span> BarChart(&#123;</span><br><span class="line">  selector: <span class="string">'#chart-1'</span>,</span><br><span class="line">  data: testdata.data1(),</span><br><span class="line">  showMidLine: <span class="literal">false</span>,</span><br><span class="line">  margin: &#123;</span><br><span class="line">    bottom: <span class="number">20</span>,</span><br><span class="line">    left: <span class="number">200</span>,</span><br><span class="line">    top: <span class="number">20</span>,</span><br><span class="line">    right: <span class="number">20</span></span><br><span class="line">  &#125;,</span><br><span class="line">  onClick: <span class="function"><span class="params">d</span> =&gt;</span> &#123;&#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;本文介绍如何使用 d3js 创建一个 bar chart 组件（参考下视频）, 下面操起来！&lt;/p&gt;

&lt;video src=&quot;/video
      
    
    </summary>
    
    
    
      <category term="d3js" scheme="http://yoursite.com/tags/d3js/"/>
    
      <category term="数据可视化" scheme="http://yoursite.com/tags/%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>我也想拥有奇特的一生，柳比歇夫时间管理法实践(没写完)</title>
    <link href="http://yoursite.com/2020/03/08/amazing-life/"/>
    <id>http://yoursite.com/2020/03/08/amazing-life/</id>
    <published>2020-03-08T04:26:53.000Z</published>
    <updated>2020-03-09T14:05:31.330Z</updated>
    
    <content type="html"><![CDATA[<h2 id="WHY"><a href="#WHY" class="headerlink" title="WHY"></a>WHY</h2><p>很久之前就读过《奇特的一生》，这是一本关于时间管理的一种反人性的方法。书中的主人公叫柳比歇夫，他的履历正是我非常期望的一种终身状态，能够专注有效的在专业领域取得成功之外还不失兴趣。在读过几次之后，我发现这本书常常吸引我的是通过这种时间管理方法柳比歇夫所得到的三种状态：</p><ol><li>有效又有趣的人生</li><li>获得时间感</li><li>对世界充满好奇与兴趣</li></ol><p>下面分别说说这和点…</p><h4 id="1-有效又有趣的人生"><a href="#1-有效又有趣的人生" class="headerlink" title="1. 有效又有趣的人生"></a>1. 有效又有趣的人生</h4><p>柳比歇夫全名亚历山大·亚历山德罗维奇·柳比歇夫，是前苏联的昆虫学家、哲学家、数学家。从26岁到82岁这几十年间，他一共发表了七十多部学术著作，内容涵盖地蚤的分类、科学史、农业、遗传学、植物保护、昆虫学、动物学、进化论、无神论等众多领域。除了研究昆虫这个本职工作，柳比歇夫还自学了英文、德文和法文；谈起英国的君主制度，他能够说出任何一个英国国王的执政细节；说到宗教，不管是古兰经、犹太传经，还是罗马教廷的源流、毕达哥拉斯学派的思想，他都如数家珍。</p><p>很多人可能会觉得，柳比歇夫对于时间管理的严格执行，让他把自己变得像个固定的程序，但实际上，这个人还真不是没有人情味的人。这个人在学术上、在兴趣上、在生活上，并没有边界。你能找到他对于本专业的研究，也能找到他关于文学作品的批评，有时候，他又会研究跟自己领域遥远的学科。柳比歇夫不是一个刻板的人，但是他又做了这样一件刻板的事情，把自己的一生浓缩成了时间账本。</p><h4 id="2-获得时间感"><a href="#2-获得时间感" class="headerlink" title="2. 获得时间感"></a>2. 获得时间感</h4><p>一种长期进行的重复活动，会使你对这件事情特别有“分寸”感。而在时间记录上的“分寸”感就是对时间精确的估算的能力。柳比歇夫在长时间的时间记录下，可能做到在不看表的情况下对时间的估算在分钟误差以内。在我自己的亲身试验中，我发现这是一个很神奇的体验。以前你从来没有在意的时间变得能好像可以看见了。你知道了:</p><ul><li>一次早会需要多少时间</li><li>通勤的时间</li><li>洗漱的时间</li><li>从公交站到公司步行的时间</li><li>读一本200页书的时间</li><li>…</li></ul><p>而且感受到了时间感对于有效利用时间的重要性，只有“看见”时间才能更好的利用时间。</p><h4 id="3-对世界充满好奇与兴趣"><a href="#3-对世界充满好奇与兴趣" class="headerlink" title="3. 对世界充满好奇与兴趣"></a>3. 对世界充满好奇与兴趣</h4><p>讲述柳比歇夫其它的非专业成就</p><h2 id="HOW"><a href="#HOW" class="headerlink" title="HOW"></a>HOW</h2><p>柳比歇夫的时间管理方法分为4个步骤：</p><ol><li>记录</li><li>统计</li><li>分析</li><li>调整</li></ol><p>这样形成了一个闭环，然后进行迭代。在这一点上与敏捷的迭代思想，与PDCA是异曲同工的。我主要想描述一下其中的细节：</p><h4 id="记录什么？"><a href="#记录什么？" class="headerlink" title="记录什么？"></a>记录什么？</h4><p>柳比歇夫的方法是一个“时间账本”，而不像平时我们的日记除了事实还有感受与评论。在他的账本里只记录了时间，时长，事件和分类。你可以想像，他记录这样的数据格式完全是为了方便后面的统计分析。</p><h4 id="记录重要的事还是事无具细全记录？"><a href="#记录重要的事还是事无具细全记录？" class="headerlink" title="记录重要的事还是事无具细全记录？"></a>记录重要的事还是事无具细全记录？</h4><p>在《得到》听书听给出的答案是，柳比歇夫本人只记录有意义的事情，一些生活的琐事不进行记录，如吃饭，睡觉等等。我觉得这个问题要根据个人情况来决定，如果一个人他的生活作息很规律。可以只记录刨除这部分时间的剩余时间就好了。比如，一个人睡觉8小时，吃饭加个人问题加家务2小时，那可以只记录剩余的14小时的可以相对灵活使用的时间。但如果一个人是时间相对更加自由的，我觉得时间范围要再扩大一点。像我自由目前是自由职业，我会记录每天除晚上睡觉以外的90%左右的时间。</p><p>要回答上面这个问题，一是如上文所说，从时间范围上的考虑。另一个是要回答哪些事情是不需要记录的？我们都知道，数据记录了越多越细致就会有分析出更多有价值的可能。当然，成本也会随之而增加。在柳比歇夫那个时代，他做的这一切都是自己手工制作的，所以你可以想像他超乎常人的毅力。而我们现在是大数据时代，通过软件可以大大的降低记录的成本。所以，当成本可接受的情况下，尽量更多的信息是这个时代的做法。我自己呢也写了一个小程序用来记录自己的时间。</p><h4 id="记录时间误差"><a href="#记录时间误差" class="headerlink" title="记录时间误差"></a>记录时间误差</h4><p>书中提到记录的误差不超过15分钟，说明有些事情可能还是在没有及时记录而可能是事后记录的。有可能是有些场合不适合进行笔记记录所导致的。而现在呢，智能手机随身携带，如果随时记录的话，基本不会出现记录时长误差的问题。所以，在Horloge中目前也是使用及时记录的方式，不支持事后记录。因为，我觉得这是一个应该要养成的好的习惯。如果真是有事没记录下来，那没记就是没记喽，其实对整体统计的偏差也不会太大。</p><h4 id="统计"><a href="#统计" class="headerlink" title="统计"></a>统计</h4><p>书中介绍柳比歇夫每天/周/月将时间进行汇总：</p><ol><li>分析出某类工作所投入的总时间</li><li>除了总分类，也可以查看细粒度分类下的总时间投入</li></ol><p>只记录不分析是没有意义的,时间长了就不愿意记了。我每周会做一次review，分几个方面进行总结：</p><ol><li>TOP10的时间都花在了哪里？为什么</li><li>这些时间哪些过多而这并不是我所期望的？</li><li>与上周比起来，某类事情的时间投入是怎么变化的？</li><li>有哪些可以改进的？哪些又是做的好的？</li></ol><h4 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h4><p>除了统计外，还会加上自己的原因分析。为什么A工作提前完成，为什么B还没有做完等等。</p><h4 id="反馈"><a href="#反馈" class="headerlink" title="反馈"></a>反馈</h4><p>根据之前的情况，不断调整下一阶段的计划。制定不同工作的时间投入和工作目标。</p><h2 id="我的时间管理实践"><a href="#我的时间管理实践" class="headerlink" title="我的时间管理实践"></a>我的时间管理实践</h2><p>我们现在的信息和大数据时代，人人有智能手机，所以很多在他那个年代不好解决的问题在现在都变得不再是很严重的问题。为了使我的时间管理能够更高效，我做了一个小程序叫Horloge(法文是时钟的意思，音同“好垃圾”，哈哈。)。通过这个小工具可以解决很多问题：</p><p><img src="/images/horloge__event_list.jpg" alt="Horloge 事件列表"></p><h4 id="1-提高录入效率"><a href="#1-提高录入效率" class="headerlink" title="1. 提高录入效率"></a>1. 提高录入效率</h4><p>我做了几个实用的功能来减少事件记录的成本，包括：</p><ol><li>当创建时时间会自动计算</li><li>贴心提示近期常用的标签</li><li>点击stop后自动计算时长</li><li>可以点击redo，重新开始一次已记录的事件</li></ol><p>效果嘛，我自己试验每次录入在5秒左右。每天不会录入超过20件事，所以录入每天花不到2分钟就可以搞定了。</p><p><img src="/images/horloge__event_create.jpg" alt="Horloge 事件创建"></p><h4 id="2-自动统计数据"><a href="#2-自动统计数据" class="headerlink" title="2. 自动统计数据"></a>2. 自动统计数据</h4><p>统计方面，可以：</p><ol><li>统计日/周/月中事件的总投入时间</li><li>统计某事件的投入变化曲线</li></ol><p>这样就可以快速的了解到一个时间段内，我的时间都花在了哪里？同时有能看到哪些时间投入正在悄悄的发生变化？而这些是合理的吗？</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>找到一个适合自己的时间管理方法不是一朝一夕就能搞定的。那需要通过不断的试错，最终找到适合自己的“圣杯”。一起努力吧，毕竟有效又有趣的人生是那么的让人着迷，不是吗？</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;WHY&quot;&gt;&lt;a href=&quot;#WHY&quot; class=&quot;headerlink&quot; title=&quot;WHY&quot;&gt;&lt;/a&gt;WHY&lt;/h2&gt;&lt;p&gt;很久之前就读过《奇特的一生》，这是一本关于时间管理的一种反人性的方法。书中的主人公叫柳比歇夫，他的履历正是我非常期望的一种终身状态，
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>material design motion pattern</title>
    <link href="http://yoursite.com/2020/03/02/material-design-motion-pattern/"/>
    <id>http://yoursite.com/2020/03/02/material-design-motion-pattern/</id>
    <published>2020-03-02T03:36:18.000Z</published>
    <updated>2020-03-02T05:31:40.381Z</updated>
    
    <content type="html"><![CDATA[<p>The motion system is a set of transition patterns that can help users understand and navigate an app.</p><p>Material Design’s motion system is comprised of four patterns for transitioning between components or full-screen views. The patterns are decided to help users navigate and understand an app by reinforcing relationships between UI elements.</p><p>The transition patterns are:<br>Container transform<br>Shared axis<br>Fade through<br>Fade</p><h2 id="how-to-select-a-patter"><a href="#how-to-select-a-patter" class="headerlink" title="how to select a patter?"></a>how to select a patter?</h2><p>Consider the following when determining which transition pattern is appropriate for a given use case.</p><h3 id="Persistent-containers"><a href="#Persistent-containers" class="headerlink" title="Persistent containers"></a>Persistent containers</h3><p>Is a persistent container part of the transition?</p><p>Containers are shapes used to represent enclosed areas, such as buttons, lists, card surfaces. If there’s a container that’s a <a href="#">persistent element</a> in the transition, choose the container transform pattern.</p><video src="https://storage.googleapis.com/spec-host/mio-staging%2Fmio-design%2F1581631970573%2Fassets%2F15TdN-zv3cqO5AUyS5SrS6I2tbgxSDFPv%2Fpick-container-transform-2col.mp4" controls="controls"></video><h3 id="Element-types"><a href="#Element-types" class="headerlink" title="Element types"></a>Element types</h3><p><a href="https://material.io/design/motion/choreography.html#sequencing" target="_blank" rel="noopener">link</a></p><p>UI components in a sequence are categorized as outgoing, incoming, persistent.<br>Outgoing elements exit the screen<br>Ongoing elements enter the screen.<br>Persistent elements start and end on screen.</p><p>In the demo, the persistent element(container) is blue; the outgoing element(list item content) is red; and the incoming element(details page content) is green.</p><video src="https://storage.cloud.google.com/non-spec-apps/mio-direct-embeds/videos/SEQUENCING%20ELEMENTS.mp4" controls="controls"></video><h3 id="Relationships"><a href="#Relationships" class="headerlink" title="Relationships"></a>Relationships</h3><p>Is there a spatial or navigational relationship between UI elements?</p><p>If the elements in a transition do not have a persistent container, there may be a spatial relationship to emphasize, such as elements in a vertical or horizontal layout. Or, there might be a navigational relationship between elements, such as moving between peers or between levels in an app. If a spatial or navigational relationship exists between elements, choose the shared axis pattern.</p><video src="https://storage.googleapis.com/spec-host/mio-staging%2Fmio-design%2F1581631970573%2Fassets%2F1xyJ78lqkctwFliSv7mtBKhxZ_g4pjglh%2Fpick-shared-axis-2col.mp4" controls="controls"></video><p>When a relationship between UI components is insignificant or does not exist, the fade through pattern is better suited.</p><video src="https://storage.googleapis.com/spec-host/mio-staging%2Fmio-design%2F1581631970573%2Fassets%2F15Y38NqhiCSUX_Fh253WzhHLqZbsskk-g%2Fpick-fade-through-2col.mp4" controls="controls"></video><p>The fade through pattern are applied to UI components without a strong relationship to each other. Such as detinations in the bottom navigation.</p><h3 id="Entering-and-Exiting"><a href="#Entering-and-Exiting" class="headerlink" title="Entering and Exiting"></a>Entering and Exiting</h3><p>Does a UI component enter or exit the screen?</p><p>Oftentimes a UI element simply needs to enter or exit the screen. For entering and exiting elements, the fade pattern is best suited.</p><video src="https://storage.googleapis.com/spec-host/mio-staging%2Fmio-design%2F1581631970573%2Fassets%2F15U7Uh31BRkOrM2RL7zDrDgM3dPrsU_Ue%2Fpick-fade-2col.mp4" controls="controls"></video><p>The fade pattern can be applied to UI element that enter or exit the screen, such as dialogs.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;The motion system is a set of transition patterns that can help users understand and navigate an app.&lt;/p&gt;
&lt;p&gt;Material Design’s motion sys
      
    
    </summary>
    
    
    
      <category term="English" scheme="http://yoursite.com/tags/English/"/>
    
      <category term="MaterialDesign" scheme="http://yoursite.com/tags/MaterialDesign/"/>
    
  </entry>
  
  <entry>
    <title>程序员如何提高英文水平</title>
    <link href="http://yoursite.com/2020/02/24/how-to-improve-my-english/"/>
    <id>http://yoursite.com/2020/02/24/how-to-improve-my-english/</id>
    <published>2020-02-24T04:54:36.000Z</published>
    <updated>2020-03-02T05:30:22.621Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Why"><a href="#Why" class="headerlink" title="Why"></a>Why</h2><p>作为一个程序员，英语对我来说太重要了。很多问题，在中文环境下找不到解决方案，但在英文环境下可以。第二，有很多新的技术或小众技术第一时间都是英文资料。所以，不会英文，解决问题的速度要比别人慢。掌握新技能的速度也要比别人慢。</p><p>还好，我对英文技术类文字的阅读没什么障碍，可能也是多看一直查阅练就的。但书写/口语/听力就还是大学毕业那个水平了，一直没什么长进。因此，我写了这个文章谈谈我近期的一些提高口语/书写/听力的一些思路和尝试。</p><h2 id="How"><a href="#How" class="headerlink" title="How"></a>How</h2><h4 id="将自己最大限度沉浸在英文环境中"><a href="#将自己最大限度沉浸在英文环境中" class="headerlink" title="将自己最大限度沉浸在英文环境中"></a>将自己最大限度沉浸在英文环境中</h4><p>文字输入上，我的场景有写代码，写代码注释，写需求说明，写 bug 描述，画原型图，写原型图 comment，与国人聊天，国内论坛发贴等。针对尽可能的将自己置身于英文环境  中我做了以下几件事：</p><ol><li>将 mac 换成英文系统</li><li>写代码注释和 git commit message 使用英文。这有另外一个好处是不用切换输入法，所以写的更快。</li><li>写需求说明和 bug 描述的时候，在项目允许的情况下（因为我是独立开发，所以自己允许  自己就行了），使用英文。</li><li>原型图 comment，使用英文</li><li>写 blog，英文中文双语。先写中文，然后自己翻译成英文。</li><li>写 git documenation 使用双语，方法同第 5 条。</li></ol><h4 id="使用-grammerly-提升文笔"><a href="#使用-grammerly-提升文笔" class="headerlink" title="使用 grammerly 提升文笔"></a>使用 grammerly 提升文笔</h4><p>平时写英文的时候可能不太主意语法或用词，这样写出来的东西只能自己看懂。如果一直这样，即使能够流程的使用英文进行描述了，没法与人沟通也是没有意义的。在认识到这点之后，我买了<a href="http://grammarly.com" target="_blank" rel="noopener">grammerly</a>会员，可以对语法/用词进行分析，并给出提示。能帮助你输出更易懂，更通顺的表达。</p><h4 id="口语提升"><a href="#口语提升" class="headerlink" title="口语提升"></a>口语提升</h4><p>我练习口语的目的非常明确，期望能够以后能够找到一个海外远程的工作机会或兼职机会。因此，需要具备如下技能：</p><ol><li>可以听懂老外的关于工作描述的内容，能够正常的进行视频会议</li><li>能够汇报自己的工作，表达自己的想法</li><li>能够针对需求进行讨论</li><li>能够针对技术进行讨论</li></ol><p>关于这块如果有针对性的练习和提升，我目前想的还不是很清楚。我是通过两个手段：</p><ol><li>使用英文流利说 APP 的定制课程，系统的提升通用英文能力。可能和上面说的针对性不是特别强，比如有些时候会讲些科学啊，吃饭啊，参观什么的。但这些属于基础类的。</li><li>英文是否流利体现在你能用英文自如表达的主题的数量（出处 zhihu live)。如果你只能谈论电影，你不算流利。我需要做到的是能够流程谈论上述内容。因此，在平时查阅英文资料的时候，我会留意一些不错的技术类文章，然后经过修改后，进行背诵。</li></ol><h2 id="听力"><a href="#听力" class="headerlink" title="听力"></a>听力</h2><p>关于听力，不能只听地道的美音。也要能听不同口音的英文，这里英式的我觉得需求不是很大，主要是那边的客户可能会比较少。我计划在使用英文流利说半年左右的时间后，也就是今年年中开始找平台与不同口音的老外进行对话练习。</p><p>目前，会在零散时间泛听一些 youtube 上的技术类视频，这类视频内容对于我来说没有太多的生词，而且讲解的人的口音各异，我觉得比较适合作为我现阶段的听力材料。</p><h2 id="写在最后"><a href="#写在最后" class="headerlink" title="写在最后"></a>写在最后</h2><p>写这个 post 也是想给自己立个 flag, 来年今日看效果。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Why&quot;&gt;&lt;a href=&quot;#Why&quot; class=&quot;headerlink&quot; title=&quot;Why&quot;&gt;&lt;/a&gt;Why&lt;/h2&gt;&lt;p&gt;作为一个程序员，英语对我来说太重要了。很多问题，在中文环境下找不到解决方案，但在英文环境下可以。第二，有很多新的技术或小众技术第一时
      
    
    </summary>
    
    
    
      <category term="English" scheme="http://yoursite.com/tags/English/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/2020/02/24/hello-world/"/>
    <id>http://yoursite.com/2020/02/24/hello-world/</id>
    <published>2020-02-24T04:49:14.900Z</published>
    <updated>2020-02-24T04:49:14.900Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
    
  </entry>
  
</feed>
